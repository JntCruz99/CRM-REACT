{"ast":null,"code":"import React,{useState,useEffect}from'react';import Chart from'chart.js/auto';import{Line}from'react-chartjs-2';import moment from'moment';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const ChartComponent=()=>{const token=localStorage.getItem('token');const[vendasPendentes,setVendasPendentes]=useState([]);useEffect(()=>{const fetchVendasPendentes=async()=>{try{let allVendasPendentes=[];let currentPage=0;while(true){const response=await axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/vendas\"),{headers:{Authorization:\"Bearer \".concat(token)},params:{page:currentPage,size:10}});const vendasPendentes=response.data.content.filter(venda=>venda.status==='CONVERTIDO'&&venda.data&&moment(new Date(...venda.data)).isAfter(moment().subtract(1,'year')));allVendasPendentes=allVendasPendentes.concat(vendasPendentes);if(response.data.last){break;}currentPage++;}setVendasPendentes(allVendasPendentes);}catch(error){console.error('Erro ao obter as vendas pendentes:',error);}};fetchVendasPendentes();},[token]);const calculateVendasPorMes=()=>{const vendasPorMes=Array.from({length:12},()=>0);vendasPendentes.forEach(venda=>{const monthIndex=moment(new Date(...venda.data)).month();vendasPorMes[monthIndex]++;});return vendasPorMes;};const getCurrentYearLabels=()=>{const currentYear=moment().year();const monthLabels=moment.monthsShort();const currentYearLabels=monthLabels.map((month,index)=>\"\".concat(month,\" \").concat(currentYear));return currentYearLabels;};const data={labels:getCurrentYearLabels(),datasets:[{label:'',data:calculateVendasPorMes(),fill:true,borderColor:\"#006400\"}]};const options={scales:{y:{type:'linear',position:'left'}},plugins:{legend:{display:false}}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Line,{data:data,options:options})});};export default ChartComponent;","map":{"version":3,"names":["React","useState","useEffect","Chart","Line","moment","axios","jsx","_jsx","ChartComponent","token","localStorage","getItem","vendasPendentes","setVendasPendentes","fetchVendasPendentes","allVendasPendentes","currentPage","response","get","concat","process","env","REACT_APP_API_URL","headers","Authorization","params","page","size","data","content","filter","venda","status","Date","isAfter","subtract","last","error","console","calculateVendasPorMes","vendasPorMes","Array","from","length","forEach","monthIndex","month","getCurrentYearLabels","currentYear","year","monthLabels","monthsShort","currentYearLabels","map","index","labels","datasets","label","fill","borderColor","options","scales","y","type","position","plugins","legend","display","children"],"sources":["C:/Users/JONATA.FESVIP/Desktop/CRM-REACT/src/components/ChartComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport { Line } from 'react-chartjs-2';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst ChartComponent = () => {\r\n  const token = localStorage.getItem('token');\r\n  const [vendasPendentes, setVendasPendentes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchVendasPendentes = async () => {\r\n      try {\r\n        let allVendasPendentes = [];\r\n        let currentPage = 0;\r\n\r\n        while (true) {\r\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            params: {\r\n              page: currentPage,\r\n              size: 10,\r\n            },\r\n          });\r\n\r\n          const vendasPendentes = response.data.content.filter(\r\n            (venda) =>\r\n              venda.status === 'CONVERTIDO' &&\r\n              venda.data &&\r\n              moment(new Date(...venda.data)).isAfter(moment().subtract(1, 'year'))\r\n          );\r\n\r\n          allVendasPendentes = allVendasPendentes.concat(vendasPendentes);\r\n\r\n          if (response.data.last) {\r\n            break;\r\n          }\r\n\r\n          currentPage++;\r\n        }\r\n\r\n        setVendasPendentes(allVendasPendentes);\r\n      } catch (error) {\r\n        console.error('Erro ao obter as vendas pendentes:', error);\r\n      }\r\n    };\r\n\r\n    fetchVendasPendentes();\r\n  }, [token]);\r\n\r\n  const calculateVendasPorMes = () => {\r\n    const vendasPorMes = Array.from({ length: 12 }, () => 0);\r\n\r\n    vendasPendentes.forEach((venda) => {\r\n      const monthIndex = moment(new Date(...venda.data)).month();\r\n      vendasPorMes[monthIndex]++;\r\n    });\r\n\r\n    return vendasPorMes;\r\n  };\r\n\r\n  const getCurrentYearLabels = () => {\r\n    const currentYear = moment().year();\r\n    const monthLabels = moment.monthsShort();\r\n    const currentYearLabels = monthLabels.map((month, index) => `${month} ${currentYear}`);\r\n    return currentYearLabels;\r\n  };\r\n\r\n  const data = {\r\n    labels: getCurrentYearLabels(),\r\n    datasets: [\r\n      {\r\n        label: '',\r\n        data: calculateVendasPorMes(),\r\n        fill: true,\r\n        borderColor: \"#006400\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        type: 'linear',\r\n        position: 'left',\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}