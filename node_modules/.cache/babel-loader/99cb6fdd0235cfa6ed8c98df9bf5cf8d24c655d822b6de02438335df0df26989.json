{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JONATA.FESVIP\\\\Desktop\\\\CRM-REACT\\\\src\\\\components\\\\AdicionarCliente.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdicionarCliente = () => {\n  const adicionarCliente = async () => {\n    const nomeCliente = document.getElementById('nome').value;\n    const telefoneCliente = document.getElementById('numeroTelefone1').value;\n    const telefoneCliente2 = document.getElementById('numeroTelefone2').value;\n    const plataformaCliente = document.getElementById('plataforma').value;\n    const emailCliente = document.getElementById('email').value;\n    if (!nomeCliente || !telefoneCliente || !plataformaCliente || !emailCliente) {\n      alert('Por favor, preencha todos os campos.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`${process.env.REACT_APP_API_URL}/clientes`, {\n        nome: nomeCliente,\n        numeroTelefone1: telefoneCliente,\n        numeroTelefone2: telefoneCliente2,\n        plataforma: plataformaCliente,\n        email: emailCliente\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (error) {\n      console.error('Erro ao adicionar cliente:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      class: \"d-none d-sm-inline-block btn btn-sm btn shadow-sm\",\n      style: {\n        backgroundColor: 'green',\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-user fa-sm text-white-50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 130\n      }, this), \" Adicionar Cliente\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c = AdicionarCliente;\nexport default AdicionarCliente;\nvar _c;\n$RefreshReg$(_c, \"AdicionarCliente\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","AdicionarCliente","adicionarCliente","nomeCliente","document","getElementById","value","telefoneCliente","telefoneCliente2","plataformaCliente","emailCliente","alert","token","localStorage","getItem","post","process","env","REACT_APP_API_URL","nome","numeroTelefone1","numeroTelefone2","plataforma","email","headers","Authorization","error","console","children","href","class","style","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/JONATA.FESVIP/Desktop/CRM-REACT/src/components/AdicionarCliente.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AdicionarCliente = () => {\r\n\r\n    const adicionarCliente = async () => {\r\n      \r\n        const nomeCliente = document.getElementById('nome').value;\r\n        const telefoneCliente = document.getElementById('numeroTelefone1').value;\r\n        const telefoneCliente2 = document.getElementById('numeroTelefone2').value;\r\n        const plataformaCliente = document.getElementById('plataforma').value;\r\n        const emailCliente = document.getElementById('email').value;\r\n    \r\n        \r\n        if (!nomeCliente || !telefoneCliente || !plataformaCliente || !emailCliente) {\r\n          alert('Por favor, preencha todos os campos.');\r\n          return;\r\n        }\r\n    \r\n        try {\r\n          const token = localStorage.getItem('token');\r\n          await axios.post(`${process.env.REACT_APP_API_URL}/clientes`, {\r\n            nome: nomeCliente,\r\n            numeroTelefone1: telefoneCliente,\r\n            numeroTelefone2: telefoneCliente2,\r\n            plataforma: plataformaCliente,\r\n            email: emailCliente,\r\n          }, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n    \r\n          \r\n    \r\n        } catch (error) {\r\n          console.error('Erro ao adicionar cliente:', error);\r\n          \r\n        }\r\n      };\r\n\r\n    return (\r\n        <div>\r\n      <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn shadow-sm\" style={{ backgroundColor: 'green', color: 'white' }}><i\r\n    class=\"fas fa-user fa-sm text-white-50\"></i> Adicionar Cliente</a>\r\n        </div>\r\n        \r\n    );\r\n  };\r\n  \r\n  export default AdicionarCliente;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAE3B,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IAEjC,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,KAAK;IACzD,MAAMC,eAAe,GAAGH,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,KAAK;IACxE,MAAME,gBAAgB,GAAGJ,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,KAAK;IACzE,MAAMG,iBAAiB,GAAGL,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK;IACrE,MAAMI,YAAY,GAAGN,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK;IAG3D,IAAI,CAACH,WAAW,IAAI,CAACI,eAAe,IAAI,CAACE,iBAAiB,IAAI,CAACC,YAAY,EAAE;MAC3EC,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IAEA,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMhB,KAAK,CAACiB,IAAI,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,WAAU,EAAE;QAC5DC,IAAI,EAAEhB,WAAW;QACjBiB,eAAe,EAAEb,eAAe;QAChCc,eAAe,EAAEb,gBAAgB;QACjCc,UAAU,EAAEb,iBAAiB;QAC7Bc,KAAK,EAAEb;MACT,CAAC,EAAE;QACDc,OAAO,EAAE;UACPC,aAAa,EAAG,UAASb,KAAM;QACjC;MACF,CAAC,CAAC;IAIJ,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAEpD;EACF,CAAC;EAEH,oBACI1B,OAAA;IAAA4B,QAAA,eACF5B,OAAA;MAAG6B,IAAI,EAAC,GAAG;MAACC,KAAK,EAAC,mDAAmD;MAACC,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAL,QAAA,gBAAC5B,OAAA;QAC7H8B,KAAK,EAAC;MAAiC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,sBAAkB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAGZ,CAAC;AAACC,EAAA,GA7CErC,gBAAgB;AA+CpB,eAAeA,gBAAgB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}