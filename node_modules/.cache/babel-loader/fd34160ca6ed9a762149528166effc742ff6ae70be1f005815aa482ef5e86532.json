{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonatas\\\\Desktop\\\\CRM-REACT\\\\src\\\\components\\\\DoughnutChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoughnutChart = () => {\n  _s();\n  const token = localStorage.getItem('token');\n  const [vendasPendentes, setVendasPendentes] = useState(0);\n  const [vendasConvertidas, setvendasConvertidas] = useState([]);\n  const [vendasNaoConvertidas, setvendasNaoConvertidas] = useState([]);\n  useEffect(() => {\n    const vendasPendentesUltimos30Dias = async () => {\n      try {\n        let allVendasPendentes = [];\n        let currentPage = 0;\n        while (true) {\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            params: {\n              page: currentPage,\n              size: 10\n            }\n          });\n          const vendasPendentes = response.data.content.filter(venda => venda.status === 'PENDENTE' && venda.data && moment(new Date(...venda.data)).isAfter(moment().subtract(30, 'days')));\n          allVendasPendentes = allVendasPendentes.concat(vendasPendentes);\n          if (response.data.last) {\n            break;\n          }\n          currentPage++;\n        }\n        setVendasPendentes(allVendasPendentes.length);\n      } catch (error) {\n        console.error('Erro ao obter as vendas pendentes:', error);\n      }\n    };\n    const vendasConvertidasUltimos30Dias = async () => {\n      try {\n        let allVendasPendentes = [];\n        let currentPage = 0;\n        while (true) {\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            params: {\n              page: currentPage,\n              size: 10\n            }\n          });\n          const vendasPendentes = response.data.content.filter(venda => venda.status === 'CONVERTIDO' && venda.data && moment(new Date(...venda.data)).isAfter(moment().subtract(30, 'days')));\n          allVendasPendentes = allVendasPendentes.concat(vendasPendentes);\n          if (response.data.last) {\n            break;\n          }\n          currentPage++;\n        }\n        setvendasConvertidas(allVendasPendentes.length);\n      } catch (error) {\n        console.error('Erro ao obter as vendas pendentes:', error);\n      }\n    };\n    const vendasNaoConvertidasUltimos30Dias = async () => {\n      try {\n        let allVendasPendentes = [];\n        let currentPage = 0;\n        while (true) {\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            params: {\n              page: currentPage,\n              size: 10\n            }\n          });\n          const vendasPendentes = response.data.content.filter(venda => venda.status === 'NAO_CONVERTIDO' && venda.data && moment(new Date(...venda.data)).isAfter(moment().subtract(30, 'days')));\n          allVendasPendentes = allVendasPendentes.concat(vendasPendentes);\n          if (response.data.last) {\n            break;\n          }\n          currentPage++;\n        }\n        setvendasNaoConvertidas(allVendasPendentes.length);\n      } catch (error) {\n        console.error('Erro ao obter as vendas pendentes:', error);\n      }\n    };\n    vendasPendentesUltimos30Dias();\n    vendasConvertidasUltimos30Dias();\n    vendasNaoConvertidasUltimos30Dias();\n  }, [token]);\n  const data = {\n    labels: [\"NÃ£o-Convertido\", \"Convertido\", \"Pendente\"],\n    datasets: [{\n      data: [vendasNaoConvertidas, vendasConvertidas, vendasPendentes],\n      backgroundColor: ['#B22222', '#98FB98', '#FFA500'],\n      hoverBackgroundColor: ['#A52A2A', '#90EE90', '#FF8C00'],\n      hoverBorderColor: \"rgba(234, 236, 244, 1)\"\n    }]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    tooltips: {\n      backgroundColor: \"rgb(255,255,255)\",\n      bodyFontColor: \"#858796\",\n      borderColor: '#dddfeb',\n      borderWidth: 1,\n      xPadding: 15,\n      yPadding: 15,\n      displayColors: false,\n      caretPadding: 10\n    },\n    legend: {\n      display: false\n    },\n    cutoutPercentage: 80\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(DoughnutChart, \"D2nwsVbrJS0uhV+kslywaNn+pus=\");\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","useState","useEffect","Doughnut","moment","axios","jsxDEV","_jsxDEV","DoughnutChart","_s","token","localStorage","getItem","vendasPendentes","setVendasPendentes","vendasConvertidas","setvendasConvertidas","vendasNaoConvertidas","setvendasNaoConvertidas","vendasPendentesUltimos30Dias","allVendasPendentes","currentPage","response","get","process","env","REACT_APP_API_URL","headers","Authorization","params","page","size","data","content","filter","venda","status","Date","isAfter","subtract","concat","last","length","error","console","vendasConvertidasUltimos30Dias","vendasNaoConvertidasUltimos30Dias","labels","datasets","backgroundColor","hoverBackgroundColor","hoverBorderColor","options","maintainAspectRatio","tooltips","bodyFontColor","borderColor","borderWidth","xPadding","yPadding","displayColors","caretPadding","legend","display","cutoutPercentage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jonatas/Desktop/CRM-REACT/src/components/DoughnutChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst DoughnutChart = () => {\r\n  const token = localStorage.getItem('token');\r\n  const [vendasPendentes, setVendasPendentes] = useState(0);\r\n  const [vendasConvertidas, setvendasConvertidas] = useState([]);\r\n  const [vendasNaoConvertidas, setvendasNaoConvertidas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const vendasPendentesUltimos30Dias = async () => {\r\n      try {\r\n        let allVendasPendentes = [];\r\n        let currentPage = 0;\r\n    \r\n        while (true) {\r\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            params: {\r\n              page: currentPage,\r\n              size: 10,\r\n            },\r\n          });\r\n    \r\n          const vendasPendentes = response.data.content.filter(venda =>\r\n            venda.status === 'PENDENTE' &&\r\n            venda.data &&\r\n            moment(new Date(...venda.data)).isAfter(moment().subtract(30, 'days'))\r\n          );\r\n    \r\n          allVendasPendentes = allVendasPendentes.concat(vendasPendentes);\r\n    \r\n          if (response.data.last) {\r\n            break;\r\n          }\r\n    \r\n          currentPage++;\r\n        }\r\n    \r\n        setVendasPendentes(allVendasPendentes.length);\r\n    \r\n      } catch (error) {\r\n        console.error('Erro ao obter as vendas pendentes:', error);\r\n      }\r\n    };\r\n\r\n    const vendasConvertidasUltimos30Dias = async () => {\r\n      try {\r\n        let allVendasPendentes = [];\r\n        let currentPage = 0;\r\n    \r\n        while (true) {\r\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            params: {\r\n              page: currentPage,\r\n              size: 10,\r\n            },\r\n          });\r\n    \r\n          const vendasPendentes = response.data.content.filter(venda =>\r\n            venda.status === 'CONVERTIDO' &&\r\n            venda.data &&\r\n            moment(new Date(...venda.data)).isAfter(moment().subtract(30, 'days'))\r\n          );\r\n    \r\n          allVendasPendentes = allVendasPendentes.concat(vendasPendentes);\r\n    \r\n          if (response.data.last) {\r\n            break;\r\n          }\r\n    \r\n          currentPage++;\r\n        }\r\n    \r\n        setvendasConvertidas(allVendasPendentes.length);\r\n    \r\n      } catch (error) {\r\n        console.error('Erro ao obter as vendas pendentes:', error);\r\n      }\r\n    };\r\n\r\n    const vendasNaoConvertidasUltimos30Dias = async () => {\r\n      try {\r\n        let allVendasPendentes = [];\r\n        let currentPage = 0;\r\n    \r\n        while (true) {\r\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            params: {\r\n              page: currentPage,\r\n              size: 10,\r\n            },\r\n          });\r\n    \r\n          const vendasPendentes = response.data.content.filter(venda =>\r\n            venda.status === 'NAO_CONVERTIDO' &&\r\n            venda.data &&\r\n            moment(new Date(...venda.data)).isAfter(moment().subtract(30, 'days'))\r\n          );\r\n    \r\n          allVendasPendentes = allVendasPendentes.concat(vendasPendentes);\r\n    \r\n          if (response.data.last) {\r\n            break;\r\n          }\r\n    \r\n          currentPage++;\r\n        }\r\n    \r\n        setvendasNaoConvertidas(allVendasPendentes.length);\r\n    \r\n      } catch (error) {\r\n        console.error('Erro ao obter as vendas pendentes:', error);\r\n      }\r\n    };\r\n\r\n    vendasPendentesUltimos30Dias();\r\n    vendasConvertidasUltimos30Dias();\r\n    vendasNaoConvertidasUltimos30Dias();\r\n  }, [token]);\r\n\r\n  const data = {\r\n    labels: [\"NÃ£o-Convertido\", \"Convertido\", \"Pendente\"],\r\n    datasets: [\r\n      {\r\n        data: [vendasNaoConvertidas, vendasConvertidas, vendasPendentes],\r\n        backgroundColor: ['#B22222', '#98FB98', '#FFA500'],\r\n        hoverBackgroundColor: ['#A52A2A', '#90EE90', '#FF8C00'],\r\n        hoverBorderColor: \"rgba(234, 236, 244, 1)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      backgroundColor: \"rgb(255,255,255)\",\r\n      bodyFontColor: \"#858796\",\r\n      borderColor: '#dddfeb',\r\n      borderWidth: 1,\r\n      xPadding: 15,\r\n      yPadding: 15,\r\n      displayColors: false,\r\n      caretPadding: 10,\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    cutoutPercentage: 80,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Doughnut data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoughnutChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}