{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JONATA.FESVIP\\\\Desktop\\\\CRM-REACT\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport logoImg from '../img/FESVIP - borda branca.png';\nimport ChartComponent from './ChartComponent';\nimport DoughnutChart from './DoughnutChart';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Main from './Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [quantidadeVendas, setQuantidadeVendas] = useState(0);\n  const [qtdVendasConvertidas, setQtdVendasConvertidas] = useState(0);\n  const [qtdVendasUser, setQtdVendasUser] = useState(0);\n  const [cliente, setCliente] = useState(0);\n  const [nome, setNome] = useState(0);\n  const porcentagemConversao = () => {\n    const porcentagem = qtdVendasConvertidas / quantidadeVendas * 100;\n    if (isNaN(porcentagem)) {\n      return 0;\n    }\n    return porcentagem.toFixed(2);\n  };\n  const adicionarCliente = async () => {\n    const nomeCliente = document.getElementById('nome').value;\n    const telefoneCliente = document.getElementById('numeroTelefone1').value;\n    const telefoneCliente2 = document.getElementById('numeroTelefone2').value;\n    const plataformaCliente = document.getElementById('plataforma').value;\n    const emailCliente = document.getElementById('email').value;\n    if (!nomeCliente || !telefoneCliente || !plataformaCliente || !emailCliente) {\n      alert('Por favor, preencha todos os campos.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`${process.env.REACT_APP_API_URL}/clientes`, {\n        nome: nomeCliente,\n        numeroTelefone1: telefoneCliente,\n        numeroTelefone2: telefoneCliente2,\n        plataforma: plataformaCliente,\n        email: emailCliente\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (error) {\n      console.error('Erro ao adicionar cliente:', error);\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas/last30days`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const quantidadeVendas = response.data.totalElements;\n        setQuantidadeVendas(quantidadeVendas);\n      } catch (error) {\n        console.error('Erro ao obter a quantidade de vendas:', error);\n      }\n    };\n    const vendasUser = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas/last30daysuser`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const quantidadeVendas = response.data.totalElements;\n        setQtdVendasUser(quantidadeVendas);\n      } catch (error) {\n        console.error('Erro ao obter a quantidade de vendas do usuario:', error);\n      }\n    };\n    const clientesUltimos = async () => {\n      try {\n        let allClientes = [];\n        let currentPage = 0;\n        while (true) {\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/clientes`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            },\n            params: {\n              page: currentPage,\n              size: 10\n            }\n          });\n          const clientesUltimos30Dias = response.data.content.filter(cliente => {\n            if (cliente.data) {\n              const [ano, mes, dia] = cliente.data.slice(0, 3);\n              const clienteDate = moment(`${ano}-${mes}-${dia}`);\n              const limite30Dias = moment().subtract(30, 'days');\n              return clienteDate.isAfter(limite30Dias);\n            }\n            return false;\n          });\n          allClientes = allClientes.concat(clientesUltimos30Dias);\n          if (response.data.last) {\n            break;\n          }\n          currentPage++;\n        }\n        setCliente(allClientes.length);\n      } catch (error) {\n        console.error('Erro ao obter a quantidade de clientes:', error);\n      }\n    };\n    const conversao = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas/convertidos`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const quantidadeVendas = response.data.totalElements;\n        setQtdVendasConvertidas(quantidadeVendas);\n      } catch (error) {\n        console.error('Erro ao obter a quantidade de vendas do usuario:', error);\n      }\n    };\n    if (!token) {\n      navigate('/');\n    } else {\n      axios.get(`${process.env.REACT_APP_API_URL}/logado`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setNome(response.data.nome);\n        // Chama fetchData aqui após verificar o token, se necessário\n        fetchData();\n        vendasUser();\n        conversao();\n        clientesUltimos();\n      }).catch(error => {\n        console.error('Erro ao validar o token:', error);\n        navigate('/');\n      });\n    }\n  }, [navigate]);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(ChartComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoughnutChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ALpPVVQp9npd99wja5MytGHAxoo=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","logoImg","ChartComponent","DoughnutChart","axios","moment","Main","jsxDEV","_jsxDEV","Dashboard","_s","navigate","quantidadeVendas","setQuantidadeVendas","qtdVendasConvertidas","setQtdVendasConvertidas","qtdVendasUser","setQtdVendasUser","cliente","setCliente","nome","setNome","porcentagemConversao","porcentagem","isNaN","toFixed","adicionarCliente","nomeCliente","document","getElementById","value","telefoneCliente","telefoneCliente2","plataformaCliente","emailCliente","alert","token","localStorage","getItem","post","process","env","REACT_APP_API_URL","numeroTelefone1","numeroTelefone2","plataforma","email","headers","Authorization","error","console","fetchData","response","get","data","totalElements","vendasUser","clientesUltimos","allClientes","currentPage","params","page","size","clientesUltimos30Dias","content","filter","ano","mes","dia","slice","clienteDate","limite30Dias","subtract","isAfter","concat","last","length","conversao","then","catch","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/JONATA.FESVIP/Desktop/CRM-REACT/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport logoImg from '../img/FESVIP - borda branca.png';\r\nimport ChartComponent from './ChartComponent';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport Main from './Main';\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    const navigate = useNavigate();\r\n  const [quantidadeVendas, setQuantidadeVendas] = useState(0);\r\n  const [qtdVendasConvertidas, setQtdVendasConvertidas] = useState(0);\r\n  const [qtdVendasUser, setQtdVendasUser] = useState(0);\r\n  const [cliente, setCliente] = useState(0);\r\n  const [nome, setNome] = useState(0);\r\n\r\n  const porcentagemConversao = () => {\r\n    const porcentagem = (qtdVendasConvertidas / quantidadeVendas) * 100;\r\n    \r\n    if (isNaN(porcentagem)) {\r\n      return 0;\r\n    }\r\n\r\n    return porcentagem.toFixed(2);\r\n  };\r\n\r\n  const adicionarCliente = async () => {\r\n      \r\n    const nomeCliente = document.getElementById('nome').value;\r\n    const telefoneCliente = document.getElementById('numeroTelefone1').value;\r\n    const telefoneCliente2 = document.getElementById('numeroTelefone2').value;\r\n    const plataformaCliente = document.getElementById('plataforma').value;\r\n    const emailCliente = document.getElementById('email').value;\r\n\r\n    \r\n    if (!nomeCliente || !telefoneCliente || !plataformaCliente || !emailCliente) {\r\n      alert('Por favor, preencha todos os campos.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`${process.env.REACT_APP_API_URL}/clientes`, {\r\n        nome: nomeCliente,\r\n        numeroTelefone1: telefoneCliente,\r\n        numeroTelefone2: telefoneCliente2,\r\n        plataforma: plataformaCliente,\r\n        email: emailCliente,\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      \r\n\r\n    } catch (error) {\r\n      console.error('Erro ao adicionar cliente:', error);\r\n      \r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas/last30days`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const quantidadeVendas = response.data.totalElements;\r\n        setQuantidadeVendas(quantidadeVendas);\r\n      } catch (error) {\r\n        console.error('Erro ao obter a quantidade de vendas:', error);\r\n      }\r\n    };\r\n\r\n    const vendasUser = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas/last30daysuser`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const quantidadeVendas = response.data.totalElements;\r\n        setQtdVendasUser(quantidadeVendas);\r\n      } catch (error) {\r\n        console.error('Erro ao obter a quantidade de vendas do usuario:', error);\r\n      }\r\n    };\r\n\r\n    const clientesUltimos = async () => {\r\n      try {\r\n        let allClientes = [];\r\n        let currentPage = 0;\r\n    \r\n        while (true) {\r\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/clientes`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            params: {\r\n              page: currentPage,\r\n              size: 10,\r\n            },\r\n          });\r\n    \r\n          const clientesUltimos30Dias = response.data.content.filter(cliente => {\r\n            if (cliente.data) {\r\n              const [ano, mes, dia] = cliente.data.slice(0, 3); \r\n              const clienteDate = moment(`${ano}-${mes}-${dia}`);\r\n              const limite30Dias = moment().subtract(30, 'days');\r\n              return clienteDate.isAfter(limite30Dias);\r\n            }\r\n    \r\n            return false;\r\n          });\r\n    \r\n          allClientes = allClientes.concat(clientesUltimos30Dias);\r\n    \r\n          if (response.data.last) {\r\n            break;\r\n          }\r\n    \r\n          currentPage++;\r\n        }\r\n    \r\n        setCliente(allClientes.length);\r\n    \r\n      } catch (error) {\r\n        console.error('Erro ao obter a quantidade de clientes:', error);\r\n      }\r\n    };\r\n\r\n    const conversao = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/vendas/convertidos`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const quantidadeVendas = response.data.totalElements;\r\n        setQtdVendasConvertidas(quantidadeVendas);\r\n      } catch (error) {\r\n        console.error('Erro ao obter a quantidade de vendas do usuario:', error);\r\n      }\r\n    };\r\n\r\n    if (!token) {\r\n      navigate('/');\r\n    } else {\r\n      axios.get(`${process.env.REACT_APP_API_URL}/logado`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          setNome(response.data.nome);\r\n          // Chama fetchData aqui após verificar o token, se necessário\r\n          fetchData();\r\n          vendasUser();\r\n          conversao();\r\n          clientesUltimos();\r\n        })\r\n        .catch((error) => {\r\n          console.error('Erro ao validar o token:', error);\r\n          navigate('/');\r\n        });\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <Main>\r\n      <ChartComponent />\r\n      <DoughnutChart />\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}